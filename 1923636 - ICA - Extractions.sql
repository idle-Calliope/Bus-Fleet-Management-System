/*1923636 - Ellaine Fontamillas*/

USE BUS_FLEET_MANAGEMENT_SYSTEM
GO

/*JOINING BUS FLEET TABLE TO EMPLOYEES TO SHOW RELATIONSHIP*/
SELECT NATIONAL_ID AS 'WORKING EMPLOYEE', BUS_FLEET_CODE, BUS_FLEET_NAME
	FROM BUS_FLEET INNER JOIN EMPLOYEES
	ON BUS_FLEET.BUS_FLEET_CODE = EMPLOYEES.BUS_F_CODE

/*JOINING BUSES TABLE TO BUS_FLEET TABLE TO SHOW RELATIONSHIP*/
SELECT BUS_CODE, BUS_FT_CODE AS 'BUS CODE', CLASS, TYPE_, ARRIVAL_TIME,DEPARTURE_TIME,DURATION, SOURCE_, DESTINATION
	FROM BUSES INNER JOIN BUS_FLEET
	ON BUSES.BUS_FT_CODE = BUS_FLEET.BUS_FLEET_CODE

/*JOINING BUSES AND PASSENGERS TO SHOW RELATIONSHIP*/
SELECT FIRST_NAME,LAST_NAME AS 'NAME', DURATION, CLASS, TYPE_, SOURCE_, DESTINATION
	FROM BUSES INNER JOIN PASSENGERS
	ON BUSES.BUS_CODE = PASSENGERS.BUS_C

/*JOINING TICKETS AND RESERVATION*/
SELECT BOOKING_ID, BOOKING_DATE, NO_OF_TICKETS 
	FROM TICKETS INNER JOIN RESERVATIONS
	ON TICKETS.BOOKING = RESERVATIONS.BOOKING_ID

/*JOINING TICKETS AND PASSENGER*/
SELECT TICKET_NO, BUS_FLEE_CODE, BUS_CODE AS 'TICKET NO', BOOKING, FIRST_NAME, LAST_NAME, SEAT_NO, CLASS1, TYPE_2, SEAT_NO, FARE, DATE_
	FROM TICKETS INNER JOIN PASSENGERS
	ON TICKETS.PASSENGERS_ID = PASSENGERS.PASSENGER_ID

/*JOINING BUS RANK TABLE TO BUSES TABLE AND EMPLOYEES*/
SELECT RANK_NAME, NO_OF_BUSES_ARRIVED,NO_OF_BUSES_LEFT,WORKING_EMPLOYEE
	FROM EMPLOYEES 
	RIGHT JOIN BUS_RANKS
		ON BUS_RANKS.WORKING_EMPLOYEE = EMPLOYEES.NATIONAL_ID

SELECT RANK_NAME, NO_OF_BUSES_ARRIVED,NO_OF_BUSES_LEFT,WORKING_EMPLOYEE
	FROM BUS_RANKS INNER JOIN BUSES
		ON BUS_RANKS.BUS_CODE = BUSES.BUS_CODE

/*JOINING CUSTOMERS AND PARCELS*/
SELECT PARCEL_NO, ITEM, QUANTITY, WEIGHT_ CUSTOMER_FIRST_NAME, CUSTOMER_LAST_NAME, POSTAL_ADDRESS, PHONE_NO, SOURCE_, DESTINATION
	FROM CUSTOMERS INNER JOIN PARCELS
	ON CUSTOMERS.CUSTOMER_ID = PARCELS.CUSTOMER_ID

/*JOINING EMPLOYEES*/
SELECT NATIONAL_ID, BUS_F_CODE, ROLES, FIRST_NAME, LAST_NAME, PHONE_NO, AGE, SEX, DISTRICT, VILLAGE, STREET
	FROM EMPLOYEES INNER JOIN SECRETARIES
		ON EMPLOYEES.NATIONAL_ID = SECRETARIES.N_ID

SELECT NATIONAL_ID, BUS_F_CODE, ROLES, FIRST_NAME, LAST_NAME, PHONE_NO, AGE, SEX, DISTRICT, VILLAGE, STREET
	FROM EMPLOYEES
	INNER JOIN MECHANICS
		ON EMPLOYEES.NATIONAL_ID = MECHANICS._ID

SELECT NATIONAL_ID, BUS_F_CODE, ROLES, FIRST_NAME, LAST_NAME, PHONE_NO, AGE, SEX, DISTRICT, VILLAGE, STREET
	FROM EMPLOYEES
	INNER JOIN RANK_INSPECTOR
		ON EMPLOYEES.NATIONAL_ID = RANK_INSPECTOR.NAT_ID

SELECT NATIONAL_ID, BUS_F_CODE, ROLES, FIRST_NAME, LAST_NAME, PHONE_NO, AGE, SEX, DISTRICT, VILLAGE, STREET
	FROM EMPLOYEES
	INNER JOIN RANK_AUTHORITIES
		ON EMPLOYEES.NATIONAL_ID = RANK_AUTHORITIES.NL_ID

SELECT NATIONAL_ID, BUS_F_CODE, ROLES, FIRST_NAME, LAST_NAME, PHONE_NO, AGE, SEX, DISTRICT, VILLAGE, STREET
	FROM EMPLOYEES
	INNER JOIN MANAGER
		ON EMPLOYEES.NATIONAL_ID = MANAGER.NATAL_ID

SELECT NATIONAL_ID, BUS_F_CODE, ROLES, FIRST_NAME, LAST_NAME, PHONE_NO, AGE, SEX, DISTRICT, VILLAGE, STREET
	FROM EMPLOYEES
	INNER JOIN ASSISTANT
		ON EMPLOYEES.NATIONAL_ID = ASSISTANT.NAL_ID

SELECT NATIONAL_ID, BUS_F_CODE, ROLES, FIRST_NAME, LAST_NAME, PHONE_NO, AGE, SEX, DISTRICT, VILLAGE, STREET
	FROM EMPLOYEES
	INNER JOIN ATTENDEE
		ON EMPLOYEES.NATIONAL_ID = ATTENDEE.NAAL_ID

SELECT NATIONAL_ID, BUS_F_CODE, ROLES, FIRST_NAME, LAST_NAME, PHONE_NO, AGE, SEX, DISTRICT, VILLAGE, STREET
	FROM EMPLOYEES
	INNER JOIN DRIVER
		ON EMPLOYEES.NATIONAL_ID = DRIVER.NATI_ID


/*JOINING RANK AUTHORITIES*/
SELECT *
	FROM RANK_AUTHORITIES INNER JOIN MANAGER
		ON RANK_AUTHORITIES.RANK_AUTHORITY_ID = MANAGER.RANK_AU_ID

SELECT *
	FROM RANK_AUTHORITIES INNER JOIN ASSISTANT
		ON RANK_AUTHORITIES.RANK_AUTHORITY_ID = ASSISTANT.RANK_AUTH_ID

SELECT *
	FROM RANK_AUTHORITIES INNER JOIN ATTENDEE
		ON RANK_AUTHORITIES.RANK_AUTHORITY_ID = ATTENDEE.RANK_AUT_ID  

SELECT *
	FROM RANK_AUTHORITIES INNER JOIN DRIVER
		ON RANK_AUTHORITIES.RANK_AUTHORITY_ID = DRIVER.RANK_A_ID
GO

CREATE TABLE RESERVATIONS2 (BOOKINGS_ INT, SURCHARGE_FEES INT)

SELECT * FROM RESERVATIONS2
GO


USE BUS_FLEET_MANAGEMENT_SYSTEM
GO 

ALTER TABLE RESERVATIONS
ADD STATUS_1 VARCHAR(50)

UPDATE RESERVATIONS 
SET STATUS_1 = 'CANCELLED' WHERE BOOKING_ID = 777

UPDATE RESERVATIONS 
SET STATUS_1 ='ACTIVE' WHERE BOOKING_ID = 776 

UPDATE RESERVATIONS 
SET STATUS_1 ='ACTIVE' WHERE BOOKING_ID = 775

UPDATE RESERVATIONS 
SET STATUS_1 ='CANCELLED' WHERE BOOKING_ID = 774

UPDATE RESERVATIONS 
SET STATUS_1 ='ACTIVE' WHERE BOOKING_ID = 773

UPDATE RESERVATIONS 
SET STATUS_1 ='ACTIVE' WHERE BOOKING_ID = 772

UPDATE RESERVATIONS 
SET STATUS_1 ='ACTIVE' WHERE BOOKING_ID = 771

UPDATE RESERVATIONS 
SET STATUS_1 ='CANCELLED' WHERE BOOKING_ID = 770

UPDATE RESERVATIONS 
SET  STATUS_1 ='CANCELLED' WHERE BOOKING_ID = 778

UPDATE RESERVATIONS 
SET STATUS_1 ='ACTIVE' WHERE BOOKING_ID = 779

SELECT * FROM RESERVATIONS
GO	


/*TRIGGER*/
CREATE TRIGGER SURCHARGE_FEE_ ON RESERVATIONS2
AFTER UPDATE
AS
BEGIN
	IF (SELECT STATUS_1 FROM RESERVATIONS2) = 'CANCELLED'
	BEGIN
		IF (SELECT NO_OF_TICKETS FROM RESERVATIONS) = 1
			UPDATE RESERVATIONS2 SET SURCHARGE_FEES = 200
		ELSE IF (SELECT NO_OF_TICKETS FROM RESERVATIONS) = 2
			UPDATE RESERVATIONS2 SET SURCHARGE_FEES =300
		ELSE IF (SELECT NO_OF_TICKETS FROM RESERVATIONS) = 3
			UPDATE RESERVATIONS2 SET SURCHARGE_FEES =400
		ELSE IF(SELECT NO_OF_TICKETS FROM RESERVATIONS) = 4
			UPDATE RESERVATIONS2 SET SURCHARGE_FEES =500
		ELSE
			UPDATE RESERVATIONS2 SET SURCHARGE_FEES =600
	END
END
GO



CREATE PROCEDURE SELECT_RESERVATIONS2 
AS
SELECT BOOKING_ID, NO_OF_TICKETS, STATUS_1
FROM RESERVATIONS LEFT JOIN RESERVATIONS2 ON RESERVATIONS2.BOOKINGS_ = RESERVATIONS2.BOOKINGS_
GO

EXECUTE SELECT_RESERVATIONS2
